{"version":3,"sources":["views/Player/myplayer.png","reducers/playerReducer.js","actions/actionType.js","constants/index.js","data/Maps/1/index.js","reducers/mapsReducer.js","reducers/index.js","store/store.js","views/Player/index.js","views/World/Maps/index.js","views/World/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","position","walkIndex","playerLocation","playerReducer","state","arguments","length","undefined","action","type","Object","objectSpread","player","newPos","concat","SPRITE_HEIGHT","tiles","MapsReducer","payload","rootReducer","combineReducers","maps","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","connect","props","handleClickOutside","e","preventDefault","oldpos","newData","getPositionFromProps","keyCode","getWalkIndex","observeBoundaries","dispatch","useEffect","document","addEventListener","removeEventListener","data","x","y","react_default","a","createElement","Fragment","style","top","left","backgroundImage","playerWalk","backgroundPosition","width","height","getTileType","MapRows","map","tile","className","Maps","display","flexWrap","value","row","Maps_MapRows","backgroundColor","border","margin","views_Player","World_Maps","App","views_World","Boolean","location","hostname","match","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wQCGlCC,EAAe,CACbC,SAAU,CAAC,EAAG,GACdC,UAAW,EACXC,eAAgB,WAuCTC,EApCO,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEpD,OAAQC,EAAOC,MACX,ICVkB,kBDWd,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EAAMQ,OADb,CAEIZ,SAAUQ,EAAOK,OACjBX,eAAc,GAAAY,OEdF,GFcoBN,EAAOP,UAAzB,OAAAa,OAAwCC,GAAxC,MACdd,UAAWO,EAAOP,YAEtB,ICfc,kBDgBd,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAN,EAAMQ,OADb,CAEQZ,SAAUQ,EAAOK,OACjBX,eAAc,GAAAY,OErBN,GFqBwBN,EAAOP,UAAzB,OAAAa,OAAwCC,EAAxC,MACdd,UAAWO,EAAOP,YAE1B,ICpBa,iBDqBb,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAN,EAAMQ,OADb,CAEIZ,SAAUQ,EAAOK,OACjBX,eAAc,GAAAY,OE5BF,GF4BoBN,EAAOP,UAAzB,OAAAa,OAAwCC,IAAxC,MACdd,UAAWO,EAAOP,YAEtB,ICzBa,iBD0Bb,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAN,EAAMQ,OADb,CAEIZ,SAAUQ,EAAOK,OACjBX,eAAc,GAAAY,OEnCF,GFmCoBN,EAAOP,UAAzB,OAAAa,OAAwCC,IAAxC,MACdd,UAAWO,EAAOP,YAEtB,QACI,OAAOG,IGzCVY,EAAQ,CACjB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,ICHnCjB,EAAe,CACjBiB,MAAMA,GAcKC,EAZK,WAAkC,IAAjCb,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAOC,EAAOC,MACV,IAAK,YACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIY,MAAOR,EAAOU,UAEtB,QACI,OAAOd,ICLJe,EALKC,YAAgB,CAChCR,OAAQT,EACRkB,KAAMJ,ICEKK,EALDC,YACVJ,EACAK,OAAOC,8BAAgCD,OAAOC,gCCoFnCC,cAAQ,SAAAtB,GACrB,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GACFN,EAAMQ,OADX,CAEEZ,SAAUI,EAAMQ,OAAOZ,SACvBE,eAAgBE,EAAMQ,OAAOV,eAC7BD,UAAWG,EAAMQ,OAAOX,WACrBG,EAAMiB,KALX,CAMEL,MAAOZ,EAAMiB,KAAKL,SAPPU,CAnFA,SAACC,GACd,IAIMC,EAAqB,SAACC,GAC1BA,EAAEC,iBACF,IAAMC,EAASJ,EAAM3B,SACfgC,EAAUC,EAAqBJ,EAAEK,QAASH,GAC1C9B,EARa,WACnB,IAAMA,EAAY0B,EAAM1B,UACxB,OAAQA,GAAa,EAAIA,EAAU,EAAI,EAMrBkC,GACZtB,EAASuB,EAAkBL,EAAQC,EAAQnB,QAC7C,OAAQS,EAAMe,SAAS,CACrB5B,KAAMuB,EAAQvB,KACdI,OAAQA,EACRZ,UAAWA,KAKnBqC,oBAAU,WAER,OADAC,SAASC,iBAAiB,UAAWZ,GAC9B,kBAAMW,SAASE,oBAAoB,UAAWb,MAGvD,IAAMK,EAAuB,SAACC,EAASH,GACrC,OAAQG,GACN,KAAK,GACH,MAAO,CACLzB,KN5Be,iBM6BfiC,KAAMX,EACNlB,OAAQ,CAACkB,EAAO,GAAG,GAAIA,EAAO,KAElC,KAAK,GACH,MAAO,CACLtB,KNtCgB,kBMuChBiC,KAAMX,EACNlB,OAAQ,CAACkB,EAAO,GAAIA,EAAO,GAAK,KAEpC,KAAK,GACD,MAAO,CACLtB,KNtCa,iBMuCbiC,KAAMX,EACNlB,OAAQ,CAACkB,EAAO,GAAG,GAAIA,EAAO,KAEpC,KAAK,GACD,MAAO,CACLtB,KNhDc,kBMiDdiC,KAAMX,EACNlB,OAAQ,CAACkB,EAAO,GAAIA,EAAO,GAAK,KAElC,QACE,SAGJK,EAAoB,SAACL,EAAQlB,GACjC,GAAGA,EAAO,GAAK,KAAOA,EAAO,GAAK,GAAKA,EAAO,GAAG,GAAKA,EAAO,GAAK,IAChE,OAAOkB,EAER,IAAIY,EAAI9B,EAAO,GAAG,GACd+B,EAAI/B,EAAO,GAAG,GAClB,OAAGc,EAAMX,MAAM4B,GAAGD,GAAG,EACbZ,EAEFlB,GAKT,OACEgC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CACVjD,SAAU,WACVkD,IAAKvB,EAAM3B,SAAS,GACpBmD,KAAMxB,EAAM3B,SAAS,GACrBoD,gBAAe,QAAAtC,OAAUuC,IAAV,MACfC,mBAAoB3B,EAAMzB,eAC1BqD,MAAO,OACPC,OAAQ,aC/ERC,SAAc,SAAChD,GACjB,OAAOA,GACH,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,cAIbiD,EAAU,SAAC/B,GACb,OACIkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACKrB,EAAMX,MAAM2C,IAAI,SAAAC,GACb,OAAOf,EAAAC,EAAAC,cAAA,OAAKc,UAAS,QAAA/C,OAAU2C,EAAYG,IAASX,MAAO,CAACO,ONvB/C,GMuBsED,MNrBvE,UM+CbO,EApBF,SAACnC,GACV,OACIkB,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CACRjD,SAAU,WACVkD,IAAK,MACLC,KAAM,MACNI,MAAO,QACPC,OAAQ,QACRO,QAAS,OACTC,SAAU,SAIVrC,EAAMsC,MAAMN,IAAK,SAAAO,GACjB,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,CAASnD,MAAOkD,QCbpBxC,cALS,SAACtB,GACrB,MAAM,CACFY,MAAOZ,EAAMiB,KAAKL,QAGXU,CAvBD,SAACC,GAIX,OAHAW,oBAAU,WACNhB,EAAMe,SAAS,CAAC5B,KAAM,YAAaS,QAASF,MAG5C6B,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CACRjD,SAAU,WACVuD,MAAO,QACPC,OAAQ,QACRY,gBAAiB,QACjBC,OAAQ,kBACRC,OAAQ,SAERzB,EAAAC,EAAAC,cAACwB,EAAD,MACA1B,EAAAC,EAAAC,cAACyB,EAAD,CAAMP,MAAOtC,EAAMX,WCVhByD,MARf,WACE,OACE5B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAC2B,EAAD,QCMgBC,QACW,cAA7BnD,OAAOoD,SAASC,UAEe,UAA7BrD,OAAOoD,SAASC,UAEhBrD,OAAOoD,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAU3D,MAAOA,GAC7BuB,EAAAC,EAAAC,cAACmC,EAAD,OACS3C,SAAS4C,eAAe,SDuH/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d748935d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myplayer.3a1dda06.png\";","import {MOVE_NORTH, MOVE_SOUTH, MOVE_WEST, MOVE_EAST} from '../actions/actionType'\r\nimport {SPRITE_WIDTH, SPRITE_HEIGHT} from '../constants';\r\n\r\nconst initialState = {\r\n        position: [0, 0],\r\n        walkIndex: 0,\r\n        playerLocation: '0px 0px'\r\n}\r\n\r\nconst playerReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case MOVE_NORTH:\r\n            return {\r\n                ...state.player,\r\n                position: action.newPos,\r\n                playerLocation: `${SPRITE_WIDTH*action.walkIndex}px ${SPRITE_HEIGHT*1}px`,\r\n                walkIndex: action.walkIndex, \r\n            }\r\n            case MOVE_SOUTH:\r\n            return {\r\n                ...state.player,\r\n                    position: action.newPos,\r\n                    playerLocation: `${SPRITE_WIDTH*action.walkIndex}px ${SPRITE_HEIGHT*0}px`,\r\n                    walkIndex: action.walkIndex \r\n            }\r\n            case MOVE_WEST:\r\n            return {\r\n                ...state.player,\r\n                position: action.newPos,\r\n                playerLocation: `${SPRITE_WIDTH*action.walkIndex}px ${SPRITE_HEIGHT*3}px`,\r\n                walkIndex: action.walkIndex\r\n            }\r\n            case MOVE_EAST:\r\n            return {\r\n                ...state.player,\r\n                position: action.newPos,\r\n                playerLocation: `${SPRITE_WIDTH*action.walkIndex}px ${SPRITE_HEIGHT*2}px`,\r\n                walkIndex: action.walkIndex\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default playerReducer;","export const BASE = 'BASE/';\r\n\r\nexport const MOVE_NORTH = 'BASE/MOVE_NORTH';\r\n\r\nexport const MOVE_SOUTH = 'BASE/MOVE_SOUTH';\r\n\r\nexport const MOVE_WEST = 'BASE/MOVE_WEST';\r\n\r\nexport const MOVE_EAST = 'BASE/MOVE_EAST';\r\n\r\nexport const ADD_TILES = 'BASE/ADD_TILES';","export const SPRITE_HEIGHT = 95;\r\n\r\nexport const SPRITE_WIDTH = 58;","export const tiles = [\r\n    [0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 6, 0, 4, 0, 0, 0, 0, 5, 4, 6, 0, 0],\r\n    [0, 5, 0, 4, 5, 0, 5, 0, 4, 0, 0, 0, 0],\r\n    [0, 5, 0, 0, 0, 0, 5, 5, 4, 5, 5, 5, 0],\r\n    [0, 5, 0, 5, 5, 0, 5, 0, 0, 0, 0, 0, 5],\r\n    [0, 0, 0, 5, 5, 0, 0, 0, 4, 5, 0, 0, 7]\r\n];","import { tiles } from \"../data/Maps/1\";\r\nimport {ADD_TILES} from '../actions/actionType';\r\n\r\nconst initialState = {\r\n    tiles:tiles\r\n}\r\nconst MapsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'ADD_TILES':\r\n            return {\r\n                ...state,\r\n                tiles: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default MapsReducer;\r\n","import {combineReducers} from 'redux';\r\nimport playerReducer from './playerReducer';\r\nimport MapsReducer from './mapsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    player: playerReducer,\r\n    maps: MapsReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","import {createStore} from 'redux';\r\nimport rootReducer from '../reducers/index';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n)\r\n\r\nexport default store;\r\n","import React, { useEffect } from 'react';\r\nimport playerWalk from './myplayer.png';\r\nimport { MOVE_NORTH, MOVE_SOUTH, MOVE_WEST, MOVE_EAST } from '../../actions/actionType';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store/store';\r\n\r\nconst Player = (props) => {\r\n  const getWalkIndex = () => {\r\n    const walkIndex = props.walkIndex;\r\n    return (walkIndex <= 5 ? walkIndex+1 : 0);\r\n  }\r\n  const handleClickOutside = (e) => {\r\n    e.preventDefault();\r\n    const oldpos = props.position;\r\n    const newData = getPositionFromProps(e.keyCode, oldpos);\r\n    const walkIndex = getWalkIndex();\r\n    const newPos = observeBoundaries(oldpos, newData.newPos);\r\n        return (store.dispatch({\r\n          type: newData.type,\r\n          newPos: newPos,\r\n          walkIndex: walkIndex\r\n        }))\r\n  }\r\n  // const [loading, setloading] = useState(false);\r\n \r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleClickOutside);\r\n    return () => document.removeEventListener('keydown', handleClickOutside);\r\n  });\r\n  \r\n  const getPositionFromProps = (keyCode, oldpos) => {\r\n    switch (keyCode) {\r\n      case 37:\r\n        return {\r\n          type: MOVE_WEST,\r\n          data: oldpos,\r\n          newPos: [oldpos[0]-58, oldpos[1]]\r\n        }\r\n      case 38:\r\n        return {\r\n          type: MOVE_NORTH,\r\n          data: oldpos,\r\n          newPos: [oldpos[0], oldpos[1] - 95]\r\n        }\r\n      case 39:\r\n          return {\r\n            type: MOVE_EAST,\r\n            data: oldpos,\r\n            newPos: [oldpos[0]+58, oldpos[1]],\r\n          }\r\n      case 40:\r\n          return {\r\n            type: MOVE_SOUTH,\r\n            data: oldpos,\r\n            newPos: [oldpos[0], oldpos[1] + 95]\r\n          }\r\n          default:\r\n            return\r\n    }\r\n  }\r\n  const observeBoundaries = (oldpos, newPos) => {\r\n    if(newPos[0] > 696 || newPos[0] < 0 || newPos[1]<0 || newPos[1] > 475){\r\n      return oldpos;\r\n    }\r\n     let x = newPos[0]/58;\r\n     let y = newPos[1]/95;\r\n     if(props.tiles[y][x]>3){\r\n      return oldpos;\r\n     }\r\n    return newPos;\r\n  }\r\n    \r\n  \r\n\r\n  return (\r\n    <>\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: props.position[1],\r\n      left: props.position[0],\r\n      backgroundImage: `url('${playerWalk}')`,\r\n      backgroundPosition: props.playerLocation,\r\n      width: '58px',\r\n      height: '95px'\r\n    }} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    ...state.player,\r\n    position: state.player.position,\r\n    playerLocation: state.player.playerLocation,\r\n    walkIndex: state.player.walkIndex,\r\n    ...state.maps,\r\n    tiles: state.maps.tiles\r\n  }\r\n})(Player);\r\n","import React from 'react';\r\nimport {SPRITE_HEIGHT, SPRITE_WIDTH} from '../../../constants/index';\r\nimport './styles.css';\r\n\r\nconst getTileType = (type) => {\r\n    switch(type){\r\n        case 0:\r\n            return 'grass';\r\n        case 4:\r\n            return 'bricks';\r\n        case 5:\r\n            return 'tree';\r\n        case 6: \r\n            return 'rock';\r\n        case 7:\r\n            return 'treasure';\r\n    }\r\n}\r\n\r\nconst MapRows = (props) => {\r\n    return(\r\n        <>\r\n            {props.tiles.map(tile => {\r\n                return <div className={`tile ${getTileType(tile)}`} style={{height: SPRITE_HEIGHT, width: SPRITE_WIDTH}}></div>\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nconst Maps = (props) => {\r\n    return (\r\n        <div style={{\r\n            position: 'relative',\r\n            top: '0px',\r\n            left: '0px',\r\n            width: '754px',\r\n            height: '570px',\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        }}\r\n        >\r\n        {\r\n            props.value.map( row => {\r\n            return <MapRows tiles={row} />\r\n        })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Maps;","import React, {useEffect} from 'react';\r\nimport Player from '../Player';\r\nimport Maps from './Maps';\r\nimport store from '../../store/store';\r\nimport {connect} from 'react-redux';\r\nimport {ADD_TILES} from '../../actions/actionType';\r\nimport {tiles} from '../../data/Maps/1';\r\nconst World = (props) => {\r\n    useEffect(()=>{\r\n        store.dispatch({type: 'ADD_TILES', payload: tiles})\r\n    })\r\n    return (\r\n        <div style={{\r\n            position: 'relative',\r\n            width: '754px',\r\n            height: '570px',\r\n            backgroundColor: 'white',\r\n            border: '4px solid black',\r\n            margin: 'auto'\r\n        }}>\r\n            <Player />\r\n            <Maps value={props.tiles}/>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        tiles: state.maps.tiles\r\n    } \r\n}\r\nexport default connect(mapStateToProps)(World);\r\n","import React from 'react';\nimport './App.css';\nimport World from './views/World';\nfunction App() {\n  return (\n    <>\n    <World />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store/store'\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}